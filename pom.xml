<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mercedesbenz</groupId>
  <artifactId>sat-tech-job-framework</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>SAT Tech Job Framework</name>
  <description>A Job Framework for Asynchronous Services @ SAT Tech</description>

  <developers>
    <developer>
      <name>Steffen Hildebrandt</name>
      <organization>BooleWorks GmbH</organization>
      <email>steffen.hildebrandt@booleworks.com</email>
    </developer>
    <developer>
      <name>Rouven Walter</name>
      <organization>BooleWorks GmbH</organization>
      <email>rouven.walter@booleworks.com</email>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <kotlin.code.style>official</kotlin.code.style>
    <kotlin.compiler.jvmTarget>11</kotlin.compiler.jvmTarget>
    <version.kotlin>1.8.10</version.kotlin>
    <version.ktor>2.2.4</version.ktor>
    <version.slf4j>1.7.36</version.slf4j>
    <version.logback>1.2.11</version.logback>
    <version.jackson>2.14.2</version.jackson>
    <version.redis>4.3.2</version.redis>

    <version.junit>5.9.2</version.junit>
    <version.assertj>3.24.2</version.assertj>
    <version.maven-surefire-plugin>3.0.0</version.maven-surefire-plugin>
    <version.maven-source>3.2.1</version.maven-source>
    <version.jacoco>0.8.8</version.jacoco>
    <version.detekt>1.22.0</version.detekt>

    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>

    <!-- Workaround for maven bug: maven.build.timestamp is not propagated to resource filtering -->
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
  </properties>

  <build>
    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>

    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${version.kotlin}</version>
        <executions>
          <execution>
            <id>compile</id>
            <phase>process-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jvmTarget>11</jvmTarget>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.maven-surefire-plugin}</version>
      </plugin>

      <!-- Compile jar with sources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${version.maven-source}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- JaCoCo (Test Coverage)  -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.jacoco}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.ozsie</groupId>
        <artifactId>detekt-maven-plugin</artifactId>
        <version>${version.detekt}</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <config>detekt.yml</config>
          <excludes>**/test/**;**/generated/**gg</excludes>
          <report>
            <report>txt:target/detekt/detekt.txt</report>
            <report>html:target/detekt/detekt.html</report>
          </report>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <version>${version.kotlin}</version>
    </dependency>

    <!-- KTOR -->
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-server-cio-jvm</artifactId>
      <version>${version.ktor}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-server-status-pages-jvm</artifactId>
      <version>${version.ktor}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-server-call-logging-jvm</artifactId>
      <version>${version.ktor}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-server-cors-jvm</artifactId>
      <version>${version.ktor}</version>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-server-content-negotiation-jvm</artifactId>
      <version>${version.ktor}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.slf4j}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${version.logback}</version>
    </dependency>

    <!-- Jackson -->
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-serialization-jackson-jvm</artifactId>
      <version>${version.ktor}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${version.jackson}</version>
    </dependency>

    <!-- Redis -->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${version.redis}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${version.assertj}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit5</artifactId>
      <version>${version.kotlin}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-server-test-host-jvm</artifactId>
      <version>${version.ktor}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.ktor</groupId>
      <artifactId>ktor-client-mock-jvm</artifactId>
      <version>${version.ktor}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>pdm-artifactory</id>
      <name>PDM Artifactory</name>
      <url>https://artifacts.i.mercedes-benz.com/artifactory/maven-open-virtual</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
</project>
